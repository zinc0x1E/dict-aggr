{"version":3,"sources":["logo.svg","data-access/request.js","wordPage.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","timeout","interceptors","request","use","config","error","console","Promise","reject","response","data","WordPage","isModalVisible","setIsModalVisible","word","defData","getWord","title","visible","onOk","onCancel","undefined","renren","tags","map","tag","log","className","colins","hwi","prs","mw","children","part","fl","hw","shortdef","def","renderWordBody","App","useState","buffer","setDefData","fetchData","a","get","COLINS_DICTIONARY_API_KEY","then","res","$","cheerio","load","each","i","ele","push","text","catch","err","src","logo","alt","style","width","height","onChange","e","target","value","color","backgroundColor","border","padding","onClick","v","SearchOutlined","newVal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed3f981c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    timeout: 5000\r\n})\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(\r\n    (config) => {\r\n        // do something before request is sent\r\n        return config\r\n    },\r\n    (error) => {\r\n        // do something with request error\r\n        console.error(error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n// response interceptor\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        const res = response.data\r\n\r\n        return res.data\r\n    },\r\n    (error) => {\r\n        console.error(error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default instance.request","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Input, Space } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { fetchDataFromColins } from \"./data-access/colins\";\r\nimport axios from \"axios\";\r\nimport { COLINS_DICTIONARY_API_KEY } from \"./secret.json\";\r\nimport cheerio from \"cheerio\";\r\n\r\nconst WordPage = ({\r\n  isModalVisible,\r\n  setIsModalVisible,\r\n  word,\r\n  data,\r\n  getWord,\r\n  defData,\r\n}) => {\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const renderWordBody = (defData) => {\r\n    if (!isModalVisible || defData === null || defData === undefined) {\r\n      return <h1>LOADING</h1>;\r\n    }\r\n\r\n    data = defData;\r\n    try {\r\n      return (\r\n        <>\r\n          <h1><span>{data.word}</span></h1>\r\n          {data.renren.tags.map(tag => <span> | {tag} | </span>)}\r\n          {console.log(\"in wordPage data =\", data)}\r\n          <div className=\"def-header\">\r\n            <div className=\"pron\">\r\n              {console.log(\"in wordPage 2 data =\", data)}\r\n              <span className=\"pron-mw\">/{data.colins[0].hwi.prs[0].mw}/</span>\r\n            </div>\r\n            <div children=\"parts-wrapper\">\r\n              {data.colins.map((part) => (\r\n                <div className=\"part-wrapper\">\r\n                  <h2 className=\"part-title\">\r\n                    <span className=\"fl\"><code>{part.fl}</code></span>\r\n                    <span>      | </span>\r\n                    <span className=\"hw\">{part.hwi.hw}</span>\r\n                  </h2>\r\n                  <div className=\"defs-wrapper\">\r\n                    {part.shortdef.map((def) => (\r\n                      <p className=\"def\">{def}</p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } catch {\r\n      return <h1>LOOK UP FAILED</h1>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {renderWordBody(defData)}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WordPage;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Input, Space } from \"antd\";\nimport { AudioOutlined } from \"@ant-design/icons\";\nimport { Modal, Button, Tooltip } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport React, { useState } from \"react\";\nimport WordPage from \"./wordPage\";\nimport { fetchDataFromColins } from \"./data-access/colins\";\nimport axios from \"axios\";\nimport { COLINS_DICTIONARY_API_KEY } from \"./secret.json\";\nimport cheerio from \"cheerio\";\n\nfunction App() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  // const [word, setWord] = useState(\"\");\n\n  let buffer = \"\";\n  const [defData, setDefData] = useState(undefined);\n  // const [isModalVisible, setIsModalVisible] = isModalVisibleHook;\n  // let isModalVisible = false\n  const fetchData = async (word) => {\n    const data = {word: word};\n    await axios\n      .get(\n        `https://www.dictionaryapi.com/api/v3/references/collegiate/json/${word}?key=${COLINS_DICTIONARY_API_KEY}`\n      )\n      .then((res) => {\n        console.log(res);\n        data.colins = res.data;\n      });\n\n    await axios\n      .get(`https://www.91dict.com/words?w=${word}`)\n      .then((res) => {\n        console.log(res);\n        let $ = cheerio.load(res.data);\n        let tags = [];\n        $(\"div.tag\")\n          .children()\n          .each((i, ele) => {\n            tags.push($(ele).text());\n          });\n        data.renren = {};\n        data.renren.tags = tags;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    return data;\n  };\n\n  const showModal = () => {\n    console.log(\"buffer =\", buffer);\n    // setWord(buffer.trim());\n    // console.log(\"word = \", word);\n    fetchData(buffer).then((v) => {\n      console.log(\"============== v =\", v)\n      setDefData(v);\n      setIsModalVisible(true);\n    });\n  };\n\n  const onTextFieldChange = (e) => {\n    buffer = e.target.value;\n    console.log(buffer);\n  };\n  const onSearch = (e) => {\n    console.log(e);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <code> Define Words You Want </code>\n        </p>{\" \"}\n        <div\n          className=\"search-field-wrapper\"\n          style={{\n            width: \"60%\",\n            height: \"2.5em\",\n          }}\n        >\n          <input\n            onChange={onTextFieldChange}\n            style={{ color: \"black\", height: \"100%\", width: \"80%\" }}\n          ></input>\n          <button\n            style={{\n              backgroundColor: \"#61dafb\",\n              border: \"0px\",\n              padding: \"0px\",\n              height: \"100%\",\n              width: \"20%\",\n            }}\n            onClick={() => {\n              onSearch();\n              showModal();\n            }}\n          >\n            <SearchOutlined /> Search{\" \"}\n          </button>\n        </div>\n        <WordPage\n          isModalVisible={isModalVisible}\n          setIsModalVisible={(newVal) => setIsModalVisible(newVal)}\n          defData={defData}\n        ></WordPage>\n        {/* <Modal\n          title=\"Basic Modal\"\n          visible={isModalVisible}\n          onOk={handleOk}\n          onCancel={handleCancel}\n        >\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal> */}\n      </header>{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}